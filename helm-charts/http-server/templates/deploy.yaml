apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-http-server"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "http-server.metaLabels" $ | nindent 4 }}
    app.kubernetes.io/component: "http-server"
spec:
  replicas: {{ .Values.minReplicas }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  progressDeadlineSeconds: {{ .Values.progressDeadlineSeconds }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  selector:
    matchLabels:
      {{- include "http-server.matchLabels" $ | nindent 6 }}
      app.kubernetes.io/component: "http-server"
  template:
    metadata:
      labels:
        {{- include "http-server.metaLabels" $ | nindent 8 }}
        app.kubernetes.io/component: "http-server"
      annotations:
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        prometheus.io/port: "http"
        prometheus.io/path: "/-/metrics"
        checksum/config: >
          {{ include (print .Template.BasePath "/cm.yaml") $ | sha256sum }}
          {{ include (print .Template.BasePath "/secret.yaml") $ | sha256sum }}
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .Values.securityContext.pod | nindent 8 }}
      containers:
      - name: "{{ .Release.Name }}-http-server"
        image: "{{ .Values.image }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        {{- if .Values.deploymentCommand }}
        command:
        {{- toYaml .Values.deploymentCommand | nindent 8 }}
        {{- end }}
        {{- if .Values.deploymentArgs }}
        args:
        {{- toYaml .Values.deploymentArgs | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        {{- if .Values.extraPorts }}
        {{- toYaml .Values.extraPorts | nindent 8 }}
        {{- end }}
        readinessProbe:
          httpGet:
            port: http
            path: /-/ready
          {{- if .Values.readinessProbe }}
          {{- toYaml .Values.readinessProbe | nindent 10 }}
          {{- end }}
        livenessProbe:
          httpGet:
            port: http
            path: /-/healthy
          {{- if .Values.livenessProbe }}
          {{- toYaml .Values.livenessProbe | nindent 10 }}
          {{- end }}
        terminationMessagePolicy: File
        terminationMessagePath: "{{ .Values.terminationMessagePath }}"
        envFrom:
        - configMapRef:
            name: "{{ .Release.Name }}-http-server"
        - secretRef:
            name: "{{ .Release.Name }}-http-server"
        securityContext:
          {{- toYaml .Values.securityContext.container | nindent 10 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
          {{- toYaml .Values.volumes.mounts | nindent 10 }}
      volumes:
        {{- toYaml .Values.volumes.sources | nindent 8 }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
